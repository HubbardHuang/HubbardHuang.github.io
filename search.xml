<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>C������ַ������ڴ沼��</title>
      <link href="/2018/04/25/C%E9%A3%8E%E6%A0%BC%E5%B8%B8%E9%87%8F%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%86%85%E5%AD%98%E5%B8%83%E5%B1%80/"/>
      <url>/2018/04/25/C%E9%A3%8E%E6%A0%BC%E5%B8%B8%E9%87%8F%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%86%85%E5%AD%98%E5%B8%83%E5%B1%80/</url>
      <content type="html"><![CDATA[<p>������һ����ΪC������ַ������ַ������кܴ�Ĳ�����дһ�β��Գ����֪����������ʵ�ǳ����ơ�<br><a id="more"></a></p><ul><li>λ�ڳ��������ַ������ַ�����һ��������<code>&#39;\0&#39;</code>��β����һ������<code>strlen()</code>��ȡ�䴢�泤�ȡ�</li><li><p>ʾ������</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cout &lt;&lt; &quot;Test c-type string:&quot; &lt;&lt; endl;</span><br><span class="line">const char* s = &quot;abcdefghijklmnopq&quot;;</span><br><span class="line">cout &lt;&lt; &quot;strlen(s) = &quot; &lt;&lt; strlen(s) &lt;&lt; endl;</span><br><span class="line">for(int i = 0; i &lt;= strlen(s); i++)</span><br><span class="line">&#123;</span><br><span class="line">    cout &lt;&lt; &quot;s[&quot; &lt;&lt; i &lt;&lt; &quot;]\t&quot; &lt;&lt; static_cast&lt;int&gt;(s[i]) &lt;&lt; &quot;\t&quot; &lt;&lt; s[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>���н��</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Test c-type string:</span><br><span class="line">strlen(s) = 17</span><br><span class="line">s[0]    97      a</span><br><span class="line">s[1]    98      b</span><br><span class="line">s[2]    99      c</span><br><span class="line">s[3]    100     d</span><br><span class="line">s[4]    101     e</span><br><span class="line">s[5]    102     f</span><br><span class="line">s[6]    103     g</span><br><span class="line">s[7]    104     h</span><br><span class="line">s[8]    105     i</span><br><span class="line">s[9]    106     j</span><br><span class="line">s[10]   107     k</span><br><span class="line">s[11]   108     l</span><br><span class="line">s[12]   109     m</span><br><span class="line">s[13]   110     n</span><br><span class="line">s[14]   111     o</span><br><span class="line">s[15]   112     p</span><br><span class="line">s[16]   113     q</span><br><span class="line">s[17]   0</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      <categories>
          
          <category> C\C++ </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>YouCompleteMe的安装</title>
      <link href="/2018/04/25/YouCompleteMe%E7%9A%84%E5%AE%89%E8%A3%85/"/>
      <url>/2018/04/25/YouCompleteMe%E7%9A%84%E5%AE%89%E8%A3%85/</url>
      <content type="html"><![CDATA[<p>YouCompleteMe也称作YCM，是一款支持多语言的代码自动补全插件。笔者习惯用vim编写程序，有YCM相助定可提高开发效率。<br><a id="more"></a></p><h1 id="一、环境"><a href="#一、环境" class="headerlink" title="一、环境"></a>一、环境</h1><p>VirtualBox ubuntu 16.04 64-bit</p><h1 id="二、安装过程"><a href="#二、安装过程" class="headerlink" title="二、安装过程"></a>二、安装过程</h1><ol><li><p>安装git</p><pre><code>sudo apt install git</code></pre></li><li><p>从github获取Vundle.vim源文件</p><pre><code>git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim</code></pre></li><li><p>往~/.vimrc写进vundle的安装配置</p><pre><code>vim ~/.vimrcset nocompatible              &quot; be iMproved, requiredfiletype off                  &quot; requiredset rtp+=~/.vim/bundle/Vundle.vimcall vundle#begin()Plugin &apos;VundleVim/Vundle.vim&apos;Plugin &apos;Valloric/YouCompleteMe&apos;Plugin &apos;tpope/vim-fugitive&apos;Plugin &apos;rstacruz/sparkup&apos;, {&apos;rtp&apos;: &apos;vim/&apos;}call vundle#end()            &quot; requiredfiletype plugin indent on    &quot; required</code></pre></li><li><p>用vim命令安装vundle</p><pre><code>cd ~vim +PluginInstall</code></pre></li><li><p>安装libclang</p><pre><code>cd ~/.vim/bundle/YouCompleteMesudo apt-get install llvm-3.9 clang-3.9 libclang-3.9-dev libboost-all-dev</code></pre></li><li><p>编译libclang，构建ycm_core</p><pre><code>mkdir ~/.ycm_buildcd ~/.ycm_buildcmake -G &quot;Unix Makefiles&quot; -DUSE_SYSTEM_BOOST=ON -DEXTERNAL_LIBCLANG_PATH=/usr/lib/x86_64-linux-gnu/libclang-3.9.so . ~/.vim/bundle/YouCompleteMe/third_party/ycmd/cppcmake --build . --target ycm_core --config Release</code></pre></li><li><p>配置并运行脚本</p><pre><code>cp ~/.vim/bundle/YouCompleteMe/third_party/ycmd/examples/.ycm_extra_conf.py ~/.vim/vim ~/.vimrclet g:ycm_server_python_interpreter=&apos;/usr/bin/python&apos;let g:ycm_global_ycm_extra_conf=&apos;~/.vim/.ycm_extra_conf.py&apos;cd ~/.vim/bundle/YouCompleteMe./install.py --clang-completer</code></pre></li></ol>]]></content>
      
      <categories>
          
          <category> linux配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
